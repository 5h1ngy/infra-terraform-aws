services:

  reverse-proxy:
    networks:
      - shared-network
    image: nginx:alpine
    container_name: reverse-proxy-service
    volumes:
      - /home/ubuntu/ssl/certificate.crt:/etc/nginx/ssl/certificate.crt
      - /home/ubuntu/ssl/private.key:/etc/nginx/ssl/private.key
      - /home/ubuntu/nginx/nginx-backend.conf:/etc/nginx/nginx.conf
      - /home/ubuntu/services/backend/logs:/var/log/nginx:rw
    ports:
      - "80:80"
      - "443:443"
    entrypoint: >
      sh -c "apk add --no-cache iputils curl && nginx -g 'daemon off;'"
    depends_on:
      - be-node-portfolio
    restart: always

  be-node-portfolio:
    networks:
      - shared-network
    build:
      context: /home/ubuntu/services/backend/be-node-portfolio
      dockerfile: /home/ubuntu/Dockerfile.yml
      args:
        APP_PORT: 3000
    container_name: be-node-portfolio-service
    working_dir: /app
    volumes:
      - /home/ubuntu/services/backend/be-node-portfolio:/app
    ports:
      - "8080:3000"
    entrypoint: >
      sh -c "apk add --no-cache iputils curl && yarn start:prod"
    restart: always

  be-node-anime-watch:
    networks:
      - shared-network
    build:
      context: /home/ubuntu/services/backend/be-node-anime-watch
      dockerfile: /home/ubuntu/Dockerfile.yml
      args:
        APP_PORT: 3000
    container_name: be-node-anime-watch-service
    working_dir: /app
    volumes:
      - /home/ubuntu/services/backend/be-node-anime-watch:/app
    ports:
      - "8081:3000"
    entrypoint: >
      sh -c "apk add --no-cache iputils curl && yarn start:prod"
    restart: always

networks:
  shared-network:
    driver: bridge
